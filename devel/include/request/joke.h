// Generated by gencpp from file request/joke.msg
// DO NOT EDIT!


#ifndef REQUEST_MESSAGE_JOKE_H
#define REQUEST_MESSAGE_JOKE_H

#include <ros/service_traits.h>


#include <request/jokeRequest.h>
#include <request/jokeResponse.h>


namespace request
{

struct joke
{

typedef jokeRequest Request;
typedef jokeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct joke
} // namespace request


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::request::joke > {
  static const char* value()
  {
    return "5fc16477632f4b449d909f518ab669aa";
  }

  static const char* value(const ::request::joke&) { return value(); }
};

template<>
struct DataType< ::request::joke > {
  static const char* value()
  {
    return "request/joke";
  }

  static const char* value(const ::request::joke&) { return value(); }
};


// service_traits::MD5Sum< ::request::jokeRequest> should match 
// service_traits::MD5Sum< ::request::joke > 
template<>
struct MD5Sum< ::request::jokeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::request::joke >::value();
  }
  static const char* value(const ::request::jokeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::request::jokeRequest> should match 
// service_traits::DataType< ::request::joke > 
template<>
struct DataType< ::request::jokeRequest>
{
  static const char* value()
  {
    return DataType< ::request::joke >::value();
  }
  static const char* value(const ::request::jokeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::request::jokeResponse> should match 
// service_traits::MD5Sum< ::request::joke > 
template<>
struct MD5Sum< ::request::jokeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::request::joke >::value();
  }
  static const char* value(const ::request::jokeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::request::jokeResponse> should match 
// service_traits::DataType< ::request::joke > 
template<>
struct DataType< ::request::jokeResponse>
{
  static const char* value()
  {
    return DataType< ::request::joke >::value();
  }
  static const char* value(const ::request::jokeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // REQUEST_MESSAGE_JOKE_H
